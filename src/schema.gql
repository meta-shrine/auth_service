# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

directive @link(url: String!, import: [link__Import]) on SCHEMA

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

type Office {
  _id: ID!
  id: ID!
  title: String!
  units: [String!]!
  areas: [String!]!
  email: String!
  location: String!
}

type User {
  _id: ID!
  id: ID!
  email: String!
  username: String!
  designation: String!
  password: String!
  role: String!
  subAreas: [String!]!
}

type LoginResponse {
  access_token: String!
  user: User!
}

type Unit {
  _id: ID!
  id: ID!
  name: String!
}

type SubArea {
  _id: ID!
  id: ID!
  name: String!
}

type Scope {
  _id: ID!
  name: String!
}

type Query {
  getUser(email: String!): User!
  auditors: [User!]!
  users: [User!]!
  offices: [Office!]!
  office(id: String!): Office!
  units: [Unit!]!
  unit(id: String!): Unit!
  subAreas: [SubArea!]!
  subArea(id: Int!): SubArea!
  scopes: [Scope!]!
  scope(id: String!): Scope!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createOffice(createOfficeInput: CreateOfficeInput!): Office!
  updateOffice(updateOfficeInput: UpdateOfficeInput!): Office!
  removeOffice(id: String!): Office!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  createUnit(createUnitInput: CreateUnitInput!): Unit!
  updateUnit(updateUnitInput: UpdateUnitInput!): Unit!
  removeUnit(id: String!): Unit!
  createSubArea(createSubAreaInput: CreateSubAreaInput!): SubArea!
  updateSubArea(updateSubAreaInput: UpdateSubAreaInput!): SubArea!
  removeSubArea(id: String!): SubArea!
  createScope(createScopeInput: CreateScopeInput!): Scope!
  updateScope(updateScopeInput: UpdateScopeInput!): Scope!
  removeScope(id: String!): Scope!
}

input CreateUserInput {
  email: String!
  username: String!
  password: String!
  role: String!
  designation: String!
  subAreas: [String!]!
}

input UpdateUserInput {
  email: String!
  username: String!
  password: String
  role: String
  designation: String!
  subAreas: [String!]!
  id: String!
}

input CreateOfficeInput {
  """Office title"""
  title: String!

  """Office units"""
  units: [String!]!

  """Office areas"""
  areas: [String!]!

  """office location"""
  location: String!

  """office email to send email"""
  email: String!
}

input UpdateOfficeInput {
  """Office title"""
  title: String

  """Office units"""
  units: [String!]

  """Office areas"""
  areas: [String!]

  """office location"""
  location: String

  """office email to send email"""
  email: String
  id: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateUnitInput {
  """Name of the Unit"""
  name: String!
}

input UpdateUnitInput {
  """Office title"""
  name: String!
  id: String!
}

input CreateSubAreaInput {
  """Name of the Sub-Area"""
  name: String!
}

input UpdateSubAreaInput {
  name: String!
  id: Int!
}

input CreateScopeInput {
  """Name of the Scope"""
  name: String!
}

input UpdateScopeInput {
  """Scope Name"""
  name: String!
  id: String!
}

scalar link__Import